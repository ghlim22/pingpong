name: pingpong

services:
  backend:
    build: ./apps/backend
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - back-tier
    restart: on-failure
    volumes:
      - ./apps/frontend/static/django:/usr/src/app/srcs/staticfiles:z
      - ./apps/frontend/media/django:/usr/src/app/srcs/mediafiles:z

  postgres:
    build: ./apps/postgres
    container_name: postgres
    env_file:
      - ./.env
    networks:
      - back-tier
    shm_size: 128mb
    restart: on-failure
    volumes:
      - db:/var/lib/postgresql/data

  nginx:
    build: ./apps/nginx
    container_name: nginx
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - back-tier
    ports:
      - '443:443'
    restart: on-failure
    volumes:
      - ./apps/frontend/static:/usr/share/nginx/html/static:z
      - ./apps/frontend/media:/usr/share/nginx/html/media:z

  redis:
    build: ./apps/redis
    container_name: redis
    networks:
      - back-tier
    restart: on-failure

#  daphne:
#    build: ./apps/daphne
#    container_name: daphne
#    networks:
#      - back-tier
#    restart: on-failure

#  portainer:
#    image: portainer/portainer-ce:latest
#    container_name: portainer
#    networks:
#      - intra
#    ports:
#      - '9443:9443'
#    restart: on-failure
#    volumes:
#      - portainer-data:/data
#      - /var/run/docker.sock:/var/run/docker.sock


networks:
  back-tier: {}


volumes:
  db: {}
