

server {
#     listen       80;
#     server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }

# SSL Configuration

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /etc/nginx/ssl/gylim.pem;
    ssl_certificate_key /etc/nginx/ssl/gylim.key;
    ssl_session_timeout 5m;


    include mime.types;

#    location /api {
#     	rewrite ^/api(.*)$ $1 break;
#        proxy_pass https://backend;
#        proxy_set_header Host $host;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

	location /static-django {
		alias /usr/share/nginx/html/static/django;
	}

	location /media-django {
		alias /usr/share/nginx/html/media/django;
	}

    location /static {
        alias /usr/share/nginx/html/static;
    }

    location /media {
        alias /usr/share/nginx/html/media;
    }

    location /api {
    	proxy_hide_header Access-Control-Allow-Origin;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Credentials' 'true';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' ;
    	proxy_pass https://backend;
        client_max_body_size 4M;
     #  proxy_set_header jwt-access $http_jwt;
    }

    location /wss {
    proxy_pass https://backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    }

    location / {
        root        /usr/share/nginx/html/static;
        index       index.html;
        try_files   $uri $uri/ /index.html =404;

        # Web socket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        error_page 403 = @redirect_403;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
